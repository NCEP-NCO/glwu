

############################################
### JWAVE_GLWU_PGEN: Great Lakes Wave Sys ###
###      LSF card for development        ###
############################################
#
# LSF options
#
#PBS -A GLWU-DEV
#PBS -N JWAVE_GLWU_PGEN
#PBS -q dev
#PBS -l walltime=06:00:00
#PBS -l select=1:ncpus=1:mem=1000MB
#PBS -l place=excl
#PBS -V
#PBS -j oe
#PBS -o JWAVE_GLWU_PGEN.out
#PBS -e JWAVE_GLWU_PGEN.out

cd $PBS_O_WORKDIR

# Setup the modules
module load envvar/1.0
module load prod_envir/2.0.5
module load prod_util/2.0.8
module load PrgEnv-intel/8.1.0
module load craype/2.7.8
module load intel/19.1.3.304
module load libjpeg/9c
module load libpng/1.6.37
module load grib_util/1.2.3
module load wgrib2/2.0.8
module load util_shared/1.4.0
module list

# Set LSF variables
export KMP_AFFINITY=disabled
# specify X threads if using openmp
export OMP_NUM_THREADS=1

ulimit -s unlimited

export IOBUF_PARAMS='*:count=4:size=32M:prefetch=1:preflush=1'

# Set global variables
export modID=glwu
export MODID=GLWU
export RUN=$modID

runuser=$USER
NWROOT=/lfs/h2/emc/couple/noscrub/${runuser}      # root of file system

# envir now set by version card
# Check HOST file for where to run
. ./HOST_${modID}

# Set pref to point to matching IBM machines
pref=`cat /etc/${run_on} | cut -c1-1`
if [ "${pref}" == "l" ]
then
  pref='t'
else
 pref='g'
fi

# Lines below for retrospective testing using data in noscrub
# export DCOM=/gpfs/hps3/emc/marine/noscrub/${runuser}/GLWU_Q1FY15/DCOM
# export INCOM=/gpfs/hps3/emc/marine/noscrub/${runuser}/GLWU_Q1FY15

export job=JWAVE_GLWU_PGEN
export SMSBIN=/gpfs/${pref}p1/emc/marine/save/wavepa/sms_fake

 #Set Version numbers
version_file=$NWROOT/${sysver}/versions/wave_glwu.ver      # file with version info
if [ -f $version_file ]
then
  source $version_file
else
  echo '##############################################'
  echo '### ERROR !! : COULD NOT FIND VERSION CARD ###'
  echo '##############################################'
  exit 1
fi

# Set PDY and cycle here
export COMDATE=`pwd`

echo $COMDATE
ls $COMDATE

if [ -f $COMDATE/PDY_${modID} ]
then
   source $COMDATE/PDY_${modID}
else
  echo '##################################################'
  echo '### ERROR !! : COULD NOT SET THE PDY AND CYCLE ###'
  echo '##################################################'
  exit 1
fi

# Set j-job parameters (extracted from j-job for DEV by new NCO standards)
# the stmp file system is hugely slow
export DATA=/lfs/h2/emc/ptmp/${runuser}/${GLWUdir}/${envir}/${job}
rm -rf $DATA
mkdir -p $DATA
export jlogfile=/dev/null
export SENDECF=NO 
export SENDDBN=NO
export SENDCOM=YES 

# Set paths to home etc
export NET=wave
#export CODEwave=${CODEwave:-/lfs/h2/emc/couple/noscrub/${runuser}/${NET}_code.${wave_code_ver}/${wave_code_pkg}}
export CODEwave=${CODEwave:-/lfs/h2/emc/couple/noscrub/${runuser}/${NET}_${modID}.${wave_glwu_ver}}
export HOMEwave=${HOMEwave:-/lfs/h2/emc/couple/noscrub/${runuser}/${NET}_${modID}.${wave_glwu_ver}}

# Set COM paths
export COMROOT=/lfs/h2/emc/couple/noscrub/${runuser}/${GLWUdir}/COM_${envir}
export COMINwave=/lfs/h2/emc/couple/noscrub/${runuser}/${GLWUdir}/COM_${envir}
export COMIN=/lfs/h2/emc/couple/noscrub/${runuser}/${GLWUdir}/COM_${envir}/${RUN}.${PDY}

export COMOUTwave=/lfs/h2/emc/couple/noscrub/${runuser}/${GLWUdir}/COM_${envir}
export COMOUT=/lfs/h2/emc/couple/noscrub/${runuser}/${GLWUdir}/COM_${envir}/${RUN}.${PDY}
export COMINOUT=$COMOUT
export COMOUTwmo=/lfs/h2/emc/couple/noscrub/${runuser}/${GLWUdir}/COM_${envir}/${RUN}.${PDY}/wmo

export DBNROOT=/dev/null

# Choose to keep temporary directory
export KEEPDATA='YES'

# Execute the actual J job
############################################################################
${NWROOT}/wave_${modID}.${wave_glwu_ver}/jobs/JWAVE_${MODID}_PGEN
############################################################################
